/**********************************************************************************************************************
  COPYRIGHT
-----------------------------------------------------------------------------------------------------------------------
  Copyright (c) 2009 by Vector Informatik GmbH.                                                  All rights reserved.

                This software is copyright protected and proprietary to Vector Informatik GmbH.
                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
                All other rights remain with Vector Informatik GmbH.
-----------------------------------------------------------------------------------------------------------------------
  FILE DESCRIPTION
-----------------------------------------------------------------------------------------------------------------------
         File:  BteEvent.h
      Project:  zBte
       Module:  -
    Generator:  -
  Description:  
**********************************************************************************************************************/

/**********************************************************************************************************************
  AUTHOR IDENTITY
-----------------------------------------------------------------------------------------------------------------------
  Initials     Name                      Company
-----------------------------------------------------------------------------------------------------------------------
  vismas       Markus Schwarz            Vector Informatik GmbH
-----------------------------------------------------------------------------------------------------------------------
  REVISION HISTORY
-----------------------------------------------------------------------------------------------------------------------
  Version   Date        Author  Change Id     Description
-----------------------------------------------------------------------------------------------------------------------
  1.00.00   2008-05-28  vismas                creation
  1.01.00   2009-11-11  vismas                added handling for filter using tolerances
**********************************************************************************************************************/

#ifndef V_BTEEVENT_HEADER
#define V_BTEEVENT_HEADER

/**********************************************************************************************************************
  Includes
**********************************************************************************************************************/
#include "v_cfg.h"
#include "v_def.h"
#include "BteCfg.h"
#include "comstack_types.h"

/**********************************************************************************************************************
  Version data
**********************************************************************************************************************/
#define BTEEVENT_VERSION                        0x0101
#define BTEEVENT_RELEASE_VERSION                0x00

/**********************************************************************************************************************
  Global data defines
**********************************************************************************************************************/

/**********************************************************************************************************************
  Global typedefs
**********************************************************************************************************************/
/*--- Event ---------------------------------------------------------------------------------------------------------*/
typedef enum 
{
 kBteEventType_Default,
 kBteEventType_Command,
 kBteEventType_Error,
 kBteEventType_Internal
} tBteEventType;

typedef struct stBteEvent {
  vuint32       time;
  vuint8        comp;
  vuint8        code;
  vuint32       data1;
  vuint32       data2;
  vuint32       data3;
  vuint32       data4;
  vuint32       data5;
  vuint8        text_name[200];
  vuint8        text_param[200];
  vuint8        data_pdu[254];//wnk
  tBteEventType type;
} tBteEvent;

/*--- EventFilter ---------------------------------------------------------------------------------------------------*/
typedef enum
{
  kBte_NR,    /* NR = not relevant */
  kBte_EQ,    /* equal */
  kBte_NEQ,   /* not equal */
  kBte_LT,    /* less than */
  kBte_GT,    /* greater than */
  kBte_LE,    /* less equal */
  kBte_GE,    /* greater equal */
  kBte_RANGE, /* range */
  kBte_TOL,   /* tolerance */
  kBte_MASK   /* mask */
} tBteEventFilter_Operand;

typedef enum
{
  kBte_TIME,
  kBte_COMP,
  kBte_CODE,
  kBte_DATA1,
  kBte_DATA2,
  kBte_DATA3,
  kBte_DATA4,
  kBte_DATA5,
  kBte_DL/*wnk*/
} tBteEventFilter_Element;

/**********************************************************************************************************************
  Global data prototypes (RAM)
**********************************************************************************************************************/

/**********************************************************************************************************************
  Global data prototypes (ROM)
**********************************************************************************************************************/

/**********************************************************************************************************************
  Global function prototypes
**********************************************************************************************************************/
/*--- Event ---------------------------------------------------------------------------------------------------------*/
void BteEvent_Init( tBteEvent *pEvent );
void BteEvent_Copy( tBteEvent *pEventSrc, tBteEvent *pEventTrg );

/*--- EventFilter ---------------------------------------------------------------------------------------------------*/
void BteEventFilter_Clear( void );
void BteEventFilter_Set( tBteEventFilter_Element member, tBteEventFilter_Operand op, vuint32 value1, vuint32 value2 );
vuint8 BteEventFilter_Apply( tBteEvent *pEvent );

#endif /* V_BTEEVENT_HEADER */
/**********************************************************************************************************************
  EOF
**********************************************************************************************************************/
