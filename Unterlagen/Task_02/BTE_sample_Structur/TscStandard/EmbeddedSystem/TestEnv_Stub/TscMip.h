/***********************************************************************************************************************
 *  COPYRIGHT
 *  -------------------------------------------------------------------------------------------------------------------
 *  \verbatim
 *  Copyright (c) 2015 by Vector Informatik GmbH.                                               All rights reserved.
 *
 *                This software is copyright protected and proprietary to Vector Informatik GmbH.
 *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
 *                All other rights remain with Vector Informatik GmbH.
 *  \endverbatim
 * --------------------------------------------------------------------------------------------------------------------
 *  FILE DESCRIPTION
 * ------------------------------------------------------------------------------------------------------------------*/
/**     \file  TscMip.h
 *     \brief  TscCut header file for Mip
 *   \details  
 **********************************************************************************************************************/

/***********************************************************************************************************************
 *  AUTHOR IDENTITY
 *  -------------------------------------------------------------------------------------------------------------------
 *  Name                          Initials      Company
 *  -------------------------------------------------------------------------------------------------------------------
 *                              vismas           Vector Informatik GmbH
 *  -------------------------------------------------------------------------------------------------------------------
 *  REVISION HISTORY
 *  -------------------------------------------------------------------------------------------------------------------
 *  Version   Date        Author  ChangeId      Description
 *  -------------------------------------------------------------------------------------------------------------------
 *  1.00.00   2014-11-19  vismas  ESCAN0000000  generated by EA
 **********************************************************************************************************************/

#if !defined(TSCMIP_HEADER)
#define TSCMIP_HEADER

/***********************************************************************************************************************
 *  INCLUDES
 **********************************************************************************************************************/
#include "Mip.h"

/***********************************************************************************************************************
 *  GLOBAL CONSTANT MACROS
 **********************************************************************************************************************/
/*--- Version Data --------------------------------------------------------------------------------------------------*/
#define TSCMIP_MAJOR_VERSION                                                  (1U)
#define TSCMIP_MINOR_VERSION                                                  (0U)
#define TSCMIP_RELEASE_VERSION                                                (0U)

/*--- standard BTE data defines -------------------------------------------------------------------------------------*/
#define kTscMip_CI                                                                    0x00

/*--- wrapper function symbols --------------------------------------------------------------------------------------*/
#define kTscMip_Mip_SampleA                                                           0x01
#define kTscMip_Mip_SampleB                                                           0x02
#define kTscMip_Mip_SampleC                                                           0x03
#define kTscMip_Mip_SampleD                                                           0x04
#define kTscMip_Mip_GetVersionInfo                                                    0x05
#define kTscMip_Mip_Init                                                              0x06
#define kTscMip_Mip_InitMemory                                                        0x07
#define kTscMip_Mip_MainFunction                                                      0x08
#define kTscMip_Mip_UnInit                                                            0x09


/***********************************************************************************************************************
 *  GLOBAL FUNCTION MACROS
 **********************************************************************************************************************/
/*--- standard BTE macros -------------------------------------------------------------------------------------------*/
#define TscMip_EventMask_EnableAll()            BteLog_EventMask_EnableAll( kTscMip_CI )
#define TscMip_EventMask_DisableAll()           BteLog_EventMask_DisableAll( kTscMip_CI )
#define TscMip_EventMask_Enable(eventId)        BteLog_EventMask_Enable( kTscMip_CI, eventId )
#define TscMip_EventMask_Disable(eventId)       BteLog_EventMask_Disable( kTscMip_CI, eventId )
#define TscMip_EventListMask_EnableAll()        BteLog_EventListMask_EnableAll( kTscMip_CI )
#define TscMip_EventListMask_DisableAll()       BteLog_EventListMask_DisableAll( kTscMip_CI )
#define TscMip_EventListMask_Enable(eventId)    BteLog_EventListMask_Enable( kTscMip_CI, eventId )
#define TscMip_EventListMask_Disable(eventId)   BteLog_EventListMask_Disable( kTscMip_CI, eventId )
#define TscMip_EventLogMask_EnableAll()         BteLog_EventLogMask_EnableAll( kTscMip_CI )
#define TscMip_EventLogMask_DisableAll()        BteLog_EventLogMask_DisableAll( kTscMip_CI )
#define TscMip_EventLogMask_Enable(eventId)     BteLog_EventLogMask_Enable( kTscMip_CI, eventId )
#define TscMip_EventLogMask_Disable(eventId)    BteLog_EventLogMask_Disable( kTscMip_CI, eventId )



/***********************************************************************************************************************
 *  GLOBAL DATA TYPES AND STRUCTURES
 **********************************************************************************************************************/

/***********************************************************************************************************************
 *  GLOBAL DATA PROTOTYPES
 **********************************************************************************************************************/

/***********************************************************************************************************************
 *  GLOBAL FUNCTION PROTOTYPES
 **********************************************************************************************************************/
/*--- standard BTE function prototypes ------------------------------------------------------------------------------*/
void TscMip_Init( void );
void TscMip_Cyclic1ms( void );

/*--- wrapper function prototypes -----------------------------------------------------------------------------------*/
/***********************************************************************************************************************
  Name:         TscMip_SampleA
  Description:  
  GUID:         {33C1789D-C0A1-4725-9BE6-16EEE878A814}
  Tags:         non-reentrant, synchron, CallContext=Any
  Parameter:    
***********************************************************************************************************************/
FUNC(Std_ReturnType, MIP_CODE) TscMip_SampleA( void );

/***********************************************************************************************************************
  Name:         TscMip_SampleB
  Description:  Description of SampleB
  GUID:         {E34FB1DA-5625-49ed-95EC-E76D4CAF8E3E}
  Tags:         non-reentrant, synchron, CallContext=Any
  Parameter:    
    handle                  uint8                           Description of handle
                                                            Range: 0..77
***********************************************************************************************************************/
FUNC(Std_ReturnType, MIP_CODE) TscMip_SampleB( uint8 handle );

/***********************************************************************************************************************
  Name:         TscMip_SampleC
  Description:  Description of SampleB
  GUID:         {4F46514B-326C-4aac-A118-6FF5AD1E801D}
  Tags:         non-reentrant, synchron, CallContext=Any
  Parameter:    
    handle                  uint8                           Description of handle
                                                            Range: 0..77
    value                   uint16                          
***********************************************************************************************************************/
FUNC(Std_ReturnType, MIP_CODE) TscMip_SampleC( uint8 handle, uint16 value );

/***********************************************************************************************************************
  Name:         TscMip_SampleD
  Description:  Description of SampleB
  GUID:         {9CD6F815-7893-406b-9EC1-D8FBDDAC0681}
  Tags:         non-reentrant, synchron, CallContext=Any
  Parameter:    
    handle                  uint8                           Description of handle
    ptr                     uint16                          
***********************************************************************************************************************/
FUNC(Std_ReturnType, MIP_CODE) TscMip_SampleD( uint8 handle, uint16 ptr );

/***********************************************************************************************************************
  Name:         TscMip_GetVersionInfo
  Description:  Mip_GetVersionInfo() returns version information, vendor ID and AUTOSAR module ID of the component.
                The versions are BCD-coded.
                Note: This function can be called even if the module is not initialized. There is no DET in that case. (WG#507)
  GUID:         {E05519DC-D874-4ebc-BA5A-B247382E7CF9}
  Tags:         reentrant, synchron, CallContext=Task
  Parameter:    
    versioninfo             Std_VersionInfoType*            Pointer to where to store the version information of this module.
                                                            This pointer must not be NULL.
  Constraints:   
    Functional: Availablity                                 The availability of this API can be individually configured for each component.
***********************************************************************************************************************/
FUNC(void, MIP_CODE) TscMip_GetVersionInfo( Std_VersionInfoType* versioninfo );

/***********************************************************************************************************************
  Name:         TscMip_Init
  Description:  This function initializes the module Mip. It initializes all variables and sets the module state to initialized.
                Interrupts have to be disabled.
                The module has to be uninitialized.
  GUID:         {645981DF-3F21-4949-AA2F-EC8E89DAB017}
  Tags:         reentrant, synchron, CallContext=Task
  Parameter:    
    ConfigPtr               Mip_ConfigType                  Configuration structure for initializing the module.
                                                            The parameter 'ConfigPtr' must not be NULL_PTR.
                                                            The compiler abstraction of this pointer shall be MIP_CONST if the component does not support postbuild, otherwise it should be MIP_PBCFG.
***********************************************************************************************************************/
FUNC(void, MIP_CODE) TscMip_Mip_Init( Mip_ConfigType *ConfigPtr );

/***********************************************************************************************************************
  Name:         TscMip_InitMemory
  Description:  Service to initialize module global variables at power up. This function can be used to initialize the variables in *_INIT_* sections in case they are not initialized by the startup code.
                This function is needed as not all startup code initialize variables.
  GUID:         {5D9B2C34-C648-47e0-B396-41110F33F48B}
  Tags:         reentrant, synchron, CallContext=Task
  Parameter:    
***********************************************************************************************************************/
FUNC(void, MIP_CODE) TscMip_InitMemory( void );

/***********************************************************************************************************************
  Name:         TscMip_MainFunction
  Description:  Main function of the Mip.
  GUID:         {35DB185A-3E72-4d05-B0F5-428E0B587C8C}
  Tags:         non-reentrant, synchron, CallContext=Task
  Parameter:    
***********************************************************************************************************************/
FUNC(void, MIP_CODE) TscMip_MainFunction( void );

/***********************************************************************************************************************
  Name:         TscMip_UnInit
  Description:  
  GUID:         {C4112E3C-A5B2-495b-8701-2D45B364BECB}
  Tags:         reentrant, synchron, CallContext=Task
  Parameter:    
***********************************************************************************************************************/
FUNC(void, MIP_CODE) TscMip_UnInit( void );



#endif /* TSCMIP_HEADER */
/***********************************************************************************************************************
 *  END OF FILE
 **********************************************************************************************************************/

